{
  "hash": "e44e3c7555fceb0440ebef4dbcf31073",
  "result": {
    "markdown": "---\ntitle: \"Dia-05\"\n---\n\n::: {.cell}\n\n:::\n\n\n# Análise longitudinal de dados funcionais {#secao-5}\n\nVisualização usando o pacote refund.shiny\n\nIlustramos a análise de componentes principais funcionais variáveis no tempo usando dados de DTI (Imagem de Tensor de Difusão). O método foi desenvolvido para um projeto de amostragem funcional densa; portanto, imputamos alguns valores ausentes com estimativas. A variável \"visit.time\" no conjunto de dados DTI representa o tempo real das visitas em dias; escalamos os tempos de visita de forma que eles estejam entre 0 e 1.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata(\"DTI\") \n\nMS <- subset(DTI, case ==1) # subset data with multiple sclerosis (MS) case\n\nindex.na <- which(is.na(MS$cca))\n\nY <- MS$cca\n\nY[index.na] <- fpca.sc(Y)$Yhat[index.na]\n\nsum(is.na(Y))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\nid <- MS$ID\nvisit.index <- MS$visit\nvisit.time <- MS$visit.time/max(MS$visit.time)\n```\n:::\n\n\n# 1 Análise de componentes principais funcionais variáveis no tempo (TFPCA)\n\n## Passo 1.1: função média\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndim(Y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 340  93\n```\n:::\n\n```{.r .cell-code}\nlength(visit.time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 340\n```\n:::\n\n```{.r .cell-code}\nY.vec <- as.vector(t(Y))\ntract <- 1:93\ns <- rep(tract, nrow(Y))\nt <- rep(visit.time, each = length(tract))\n\n\nfit <- gam(Y.vec ~ te(s,t, k = c(10, 7)))\nt1 <- rep(seq(0,1, length.out=81), each = 93)\ns1 <- rep(tract, 81)\n\n\nmu.hat <- matrix(predict(fit, newdata = data.frame(s = s1, t = t1)), 93)\n\npersp(x = tract, y = seq(0,1,length.out=81), z = mu.hat, \n      xlab=\"tract\", ylab=\"visit.time\", zlab = \"mu_hat\")\n```\n\n::: {.cell-output-display}\n![](dia05_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nGráfico interativo\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# rgl::persp3d(x = tract, y = seq(0,1,length.out=81), z = mu.hat, \n#               xlab=\"tract\", ylab=\"visit.time\", zlab = \"mu_hat\")\n```\n:::\n\n\n## Passo 1.2: função de covariância marginal\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndemeaned <- Y - t(matrix(fit$fitted.values, 93))\n\nSigma <- cov(demeaned)\n\nimage.plot(tract, tract, Sigma, xlab=\"tract\", ylab=\"tract\")\n```\n\n::: {.cell-output-display}\n![](dia05_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm.fit <- fpca.face(demeaned, pve = 0.80)\nefn <- m.fit$efunctions*sqrt(93)\neval <- m.fit$evalues/93\n\nmatplot(tract, efn, type='l', lty=1,\n        xlab=\"tract\", ylab=\"eigenfunctions\")\n```\n\n::: {.cell-output-display}\n![](dia05_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nk.pc <- 1\nm <- colMeans(Y)\neffect <- efn[,k.pc] * sqrt(eval[k.pc])\nmatplot(tract, cbind(m-effect, m+effect), \n        col=c(2,4), pch = c(\"-\", \"+\"), \n        ylab=\"\", xlab=\"tract\", main=paste(\"fPC\", k.pc))\nlines(tract, m, lwd=2)\n```\n\n::: {.cell-output-display}\n![](dia05_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Passo 1.3: Covariância dos coeficientes variáveis no tempo\n\nConstrua um novo conjunto de dados com os coeficientes estimados da base $(\\xi_{ik}(t_{ij}))$ e os tempos de visita $(t_{ij})$.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscore <- m.fit$scores/sqrt(93)\nid <- MS$ID\n\nsecond.fPCA <- list()\nfor(k in 1:m.fit$npc){\n  ydata <- data.frame(.id = MS$ID, .index = visit.time, \n                      .value = score[,k])\n  second.fPCA[[k]] <- fpca.sc(ydata = ydata, pve = 0.80)\n}\n```\n:::\n\n\nA entrada ydata é outra forma de fornecer dados funcionais; isso é especialmente útil quando você possui dados longitudinais.\n\n(Atividade em grupo) Plote o segundo resultado do fPCA para diferentes k e discuta.\n\n## Passo 1.4: Reconstrução de trajetórias\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ni <- 1\nfixed_visit.time <- 0.5\n\nmu.hat <- predict(fit, newdata = data.frame(s = tract, \n                                            t = fixed_visit.time))\nscore <- c()\nfor(k in 1:m.fit$npc){\n  temp <- data.frame(Y = second.fPCA[[k]]$Yhat[i,], \n                     t = sort(unique(visit.time)))\n  temp.fit <- gam(Y ~ s(t), data = temp)\n  score <- c(score, predict(temp.fit, \n                            newdata = data.frame(t = fixed_visit.time)))\n}\n\nYhat <- as.vector(mu.hat) + \n  as.vector(m.fit$mu) + as.vector(t(score)%*%t(efn))\nplot(tract, Yhat, type='l', lwd=2,\n     xlab=\"tract\", ylab=\"predicted\")\n```\n\n::: {.cell-output-display}\n![](dia05_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n(Atividade em grupo) Plote a trajetória prevista da FA para um paciente com EM diferente / um tempo de visita diferente.\n\n# 2 Função incorporada ('fpca.lfda')\n\nA função `fpca.lfda` no pacote 'refund' ajusta o modelo de fPCA variável no tempo.\n\n$$\nY_{i}(s, t_{ij}) = \\mu(s, t_{ij}) + \\sum_{k} \\xi_{ik}(t_{ij}) \\phi_{k}(s) + \\epsilon_{ij}(s).\n$$\n\nO código a seguir é utilizado quando os coeficientes variáveis no tempo, $\\{ \\xi_{ik}(t_{ij}), t_{ij} \\}$, são modelados usando um modelo linear misto (`LongiModel.method = ‘lme’`).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# lfpca.dti1 <- fpca.lfda(Y = Y, subject.index = id, numTEvalPoints = 81,\n#                        visit.index = visit.index, obsT = visit.time,\n#                        LongiModel.method = 'lme',\n#                        mFPCA.pve = 0.95)\n# \n# plot_shiny(lfpca.dti1)\n```\n:::\n\n\nE o código a seguir é utilizado quando os coeficientes variáveis no tempo, $\\{ \\xi_{ik}(t_{ij}), t_{ij} \\}, tij\\}$, são modelados completamente de forma não paramétrica usando fPCA (`LongiModel.method = ‘fpca.sc’`).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# lfpca.dti2 <- fpca.lfda(Y = Y, subject.index = id, numTEvalPoints = 81, \n#                         visit.index = visit.index, obsT = visit.time,\n#                         LongiModel.method = 'fpca.sc',\n#                         mFPCA.pve = 0.80, sFPCA.pve = 0.80)\n# plot_shiny(lfpca.dti2)\n```\n:::\n\n\nIsso retorna duas abas com gráficos interativos:\n\n1)  Aba 1: Gráficos Exploratórios\n\n-   Dados\n-   Dados por sujeito\n-   Distribuição dos tempos longitudinais (amostragem longitudinal)\n\n2)  Aba 2: Gráficos de Estimação\n\n-   Superfície média; $\\mu(s,t)$\n-   Covariância marginal; $Σ(s,s')$\n-   Eigenfunções marginais; $\\phi_k(s)$\n-   Média +/- eigenfunções marginais\n-   Gráfico Scree\n-   Covariância da dinâmica longitudinal\n-   Coeficientes da base; $ξ_{ik}(t)$\n-   Yhat (valores previstos)\n\n(Atividade em grupo) Explore os gráficos interativos.\n",
    "supporting": [
      "dia05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}